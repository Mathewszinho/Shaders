// Shader otimizada por Mathews

uniform sampler2D TEXTURE_0;
uniform sampler2D TEXTURE_1;
varying vec2 uv;
varying vec4 color;
varying vec4 worldPosition;
varying vec4 fogColor;
void main ()
{
  vec4 finalOutput_1;
  vec4 albedo_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (TEXTURE_0, uv);
  albedo_2.xyz = tmpvar_3.xyz;
  albedo_2.w = (tmpvar_3.w * color.w);
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (TEXTURE_1, worldPosition.xz);
  if ((((
    ((worldPosition.x >= 0.0) && (worldPosition.x <= 1.0))
   && 
    (worldPosition.z >= 0.0)
  ) && (worldPosition.z <= 1.0)) && (worldPosition.y < tmpvar_4.w))) {
    albedo_2.w = 0.0;
  };
  finalOutput_1.w = albedo_2.w;
  finalOutput_1.xyz = (tmpvar_3.xyz * mix (tmpvar_4.xyz, color.xyz, clamp (
    ((worldPosition.y - tmpvar_4.w) * 10.0)
  , 0.0, 1.0)));
  gl_FragColor.xyz = mix (finalOutput_1.xyz, fogColor.xyz, fogColor.w);
  gl_FragColor.w = (albedo_2.w * 0.5);
}
